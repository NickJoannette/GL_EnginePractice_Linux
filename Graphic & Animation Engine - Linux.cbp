<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="Graphic &amp; Animation Engine - Linux" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Option virtualFolders="Shaders/;" />
		<Build>
			<Target title="Debug">
				<Option output="bin/Debug/GLEW Test" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Option projectCompilerOptionsRelation="2" />
				<Compiler>
					<Add option="-g" />
					<Add directory="/usr/include" />
				</Compiler>
				<Linker>
					<Add library="/usr/lib/x86_64-linux-gnu/libglfw.so" />
					<Add library="/usr/lib/x86_64-linux-gnu/libGLEW.so.2.0" />
					<Add library="/usr/lib/x86_64-linux-gnu/libGLEW.so.2.0.0" />
					<Add library="/usr/lib/x86_64-linux-gnu/libglfw.so.3" />
					<Add library="/usr/lib/x86_64-linux-gnu/libGLEW.so" />
					<Add library="/usr/lib/x86_64-linux-gnu/libGL.so" />
					<Add library="/usr/lib/x86_64-linux-gnu/libassimp.so.4" />
					<Add library="/usr/lib/x86_64-linux-gnu/libassimp.so.4.1.0" />
				</Linker>
			</Target>
			<Target title="Release">
				<Option output="bin/Release/GLEW Test" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
				</Compiler>
				<Linker>
					<Add option="-s" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
			<Add option="-fexceptions" />
		</Compiler>
		<Unit filename="Graphic and Animation Engine - Linux/BasicVertexGenerators.h" />
		<Unit filename="Graphic and Animation Engine - Linux/Camera.h" />
		<Unit filename="Graphic and Animation Engine - Linux/FixedFunctionRenderer.cpp" />
		<Unit filename="Graphic and Animation Engine - Linux/FixedFunctionRenderer.h" />
		<Unit filename="Graphic and Animation Engine - Linux/MasterRenderer.cpp" />
		<Unit filename="Graphic and Animation Engine - Linux/MasterRenderer.h" />
		<Unit filename="Graphic and Animation Engine - Linux/Mesh.h" />
		<Unit filename="Graphic and Animation Engine - Linux/Model.h" />
		<Unit filename="Graphic and Animation Engine - Linux/OpenGLWindow.cpp" />
		<Unit filename="Graphic and Animation Engine - Linux/OpenGLWindow.h" />
		<Unit filename="Graphic and Animation Engine - Linux/PowerTownSim.vcxproj.user" />
		<Unit filename="Graphic and Animation Engine - Linux/Rendering.h" />
		<Unit filename="Graphic and Animation Engine - Linux/Shader.h" />
		<Unit filename="Graphic and Animation Engine - Linux/SimpleGridOfSquares.cpp" />
		<Unit filename="Graphic and Animation Engine - Linux/SimpleGridOfSquares.h" />
		<Unit filename="Graphic and Animation Engine - Linux/Surface.cpp" />
		<Unit filename="Graphic and Animation Engine - Linux/Surface.h" />
		<Unit filename="Graphic and Animation Engine - Linux/TerrainRenderer.cpp" />
		<Unit filename="Graphic and Animation Engine - Linux/TerrainRenderer.h" />
		<Unit filename="Graphic and Animation Engine - Linux/main.cpp" />
		<Unit filename="Graphic and Animation Engine - Linux/stb_image.h" />
		<Unit filename="Shaders/backgroundTextureShader.fs" />
		<Unit filename="Shaders/backgroundTextureShader.vs" />
		<Unit filename="Shaders/basicShader.fs" />
		<Unit filename="Shaders/basicShader.vs" />
		<Unit filename="Shaders/lightSourceShader.fs" />
		<Unit filename="Shaders/lightSourceShader.vs" />
		<Unit filename="Shaders/model_loading.fs" />
		<Unit filename="Shaders/model_loading.vs" />
		<Unit filename="Shaders/texturedCubeShader.fs" />
		<Unit filename="Shaders/texturedCubeShader.vs" />
		<Extensions>
			<code_completion />
			<debugger />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
